buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		jcenter()    
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.google.cloud.tools:appengine-gradle-plugin:1.+")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'com.google.cloud.tools.appengine'

group = 'helloworld'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots' } 
    jcenter() 
}

configurations {
	providedRuntime
}

ext {
	springCloudGcpVersion = '1.0.0.RELEASE'
	set('springCloudVersion', 'Greenwich.RC2')
}

dependencies {
	compile 'com.google.appengine:appengine-api-1.0-sdk:+'	
	providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
  	compile 'jstl:jstl:1.2'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter-sql-mysql'  
	runtimeOnly 'mysql:mysql-connector-java'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'	
	testCompile 'junit:junit:4.12'
  	testCompile 'com.google.truth:truth:0.33'
  	testCompile 'org.mockito:mockito-all:1.10.19'
	testCompile('com.google.appengine:appengine-testing:+')
	testCompile('com.google.appengine:appengine-api-stubs:+')
	testCompile('com.google.appengine:appengine-tools-sdk:+')	
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

appengineDeploy.dependsOn test
appengineStage.dependsOn test
appengine { 
	deploy {  
		stopPreviousVersion = true  
		promote = true          
	}
}
appengine {
  run {
    jvmFlags = ["-Dappengine.fullscan.seconds=5"]
  }
}
test {
  useJUnit()
  testLogging.showStandardStreams = true
  beforeTest { descriptor ->
     logger.lifecycle("test: " + descriptor + "  Running")
  }

  onOutput { descriptor, event ->
     logger.lifecycle("test: " + descriptor + ": " + event.message )
  }
  afterTest { descriptor, result ->
    logger.lifecycle("test: " + descriptor + ": " + result )
  }
}

targetCompatibility = 1.8 